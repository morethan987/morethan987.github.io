


[{"content":" 背景提要 # 你应该知道如何通过命令行与电脑交互，包括但不限于：Windows如何唤出命令行/终端，正在运行中的命令什么时候结束\u0026hellip;\u0026hellip;\n懂一点点翻墙的技术，OverLeaf是个国外的软件,与之硬相关的latex项目也是国外的，因此下载相关依赖的时候能够直接接受国外流量会省掉很多麻烦。如果你没有VPN的话就需要为每一个包管理工具指定一个国内源，但有时候国内源更新并不及时。\n懂一些Vim的基本操作，比如：如何开启插入模式，如何保存退出，不保存退出等\n部署全流程 # 安装Linux # 在 Windows App Store 里面直接搜索一个Linux发行版本并下载，笔者选择的是Kali。安装完成后可以在开始菜单中直接打开，打开后会跳出命令行窗口，初次打开需要填写需要用户名与密码进行注册。\n此时你的命令行应该有一个Warning提示。这是因为你还没有安装WSL(Windows Subsystem for Linux)\n同时，在填写密码的时候你的输入不会显示在命令行，但已经被记录了\n为什么需要一个Linux系统？因为OverLeaf的sharelatex模型需要Linux环境。也正因如此，据说在Linux系统上运行的OverLeaf更加流畅。\n安装WSL # 安装WSL2，直接在Windows命令行中运行：\nwsl --install 这个程序安装后也可以直接打开，打开后也有一个Warning提示。这时候需要在 C:\\Users\\ASUS 目录下面写入一个text文件，然后重命名为 .wslconfig；\n写入内容为：\n[experimental] autoMemoryReclaim=gradual # gradual | dropcache | disabled networkingMode=mirrored dnsTunneling=true firewall=true autoProxy=true 安装Docker # 进入Docker官网下载Docker，这是sharelatex模型运行的容器。Docker是一个开源的应用容器引擎，其中包括，镜像、容器、仓库，目的就是通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户的产品及其环境能够做到“一次封装，到处运行”。就像一个集装箱，由程序员开发并封装，用户使用时就直接把整个集装箱搬过去。\nDocker安装完成后就可以双击启动放后台了，我们后面通过命令行来操作Docker；\n拉取镜像 # 打开Kali，直接运行\ngit clone https://github.com/overleaf/toolkit.git ./overleaf-toolkit 然后连续运行：\ncd ./overleaf-toolkit bin/init vim ./config/variables.env 此时你应该已经进入了一个文档界面，这就是Vim文本编辑器的界面。Vim有很多快捷键，其中按下\u0026quot;I\u0026quot;键即可开启插入模式，进行文本编辑，按下\u0026quot;esc\u0026quot;即可返回常规模式。在插入模式下输入：OVERLEAF_SITE_LANGUAGE=zh-CN\n输入完成后按下\u0026quot;esc\u0026quot;返回常规模式，直接键入 :wq 这是“保存并退出”，如果你不小心输错了可以 :e! 放弃所有更改重头再来。这一步是让你的OverLeaf界面显示为中文。\n当你成功保存并退出，回到熟悉的Kali命令行界面后运行 bin/up 此时正在拉取sharelatex镜像以及相关的网络工具。这时会有大量的数据传输，要保证网络通畅（梯子要稳！）\n配置用户 # 当上一个命令成功结束之后，运行 bin/start ；此时你打开Docker点进sharelatex，你应该可以看到代码“爆闪”，如果没有红色的消息，那应该是正常运行了。\n这时打开浏览器访问网址 http://localhost/launchpad\n按照提示注册Administrator Account之后，就会跳转到 http://localhost/project ；这时基本的OverLeaf网页已经可以显示了。 但现在你丢一个文件进去编译多半是会报错的 ᕕ( ᐛ )ᕗ\n因为此时sharelatex里面的宏包严重不足，不是红包「手动狗头」\n安装扩展包 # 打开Kali进入对应目录运行 bin/shell 然后逐条执行：\ncd /usr/local/texlive # 下载并运行升级脚本 wget http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.sh sh update-tlmgr-latest.sh -- --upgrade # 更换texlive的下载源 tlmgr option repository https://mirrors.sustech.edu.cn/CTAN/systems/texlive/tlnet/ # 升级tlmgr tlmgr update --self --all # 安装完整版texlive（时间比较长，不要让shell断开） tlmgr install scheme-full # 退出sharelatex的命令行界面 exit # 重启sharelatex容器 docker restart sharelatex 重启后再次进入shell，运行：\napt update # 安装字体 apt install --no-install-recommends ttf-mscorefonts-installe fonts-noto texlive-fonts-recommended tex-gyre fonts-wqy-microhei fonts-wqy-zenhei fonts-noto-cjk fonts-noto-cjk-extra fonts-noto-color-emoji fonts-noto-extra fonts-noto-ui-core fonts-noto-ui-extra fonts-noto-unhinted fonts-texgyre # 安装pygments apt install python3-pygments # 安装beamer之类的 apt install texlive-latex-recommended apt install texlive-latex-extra # 安装英文字体 echo \u0026#34;yes\u0026#34; | apt install -y --reinstall ttf-mscorefonts-installer # 安装中文字体 apt install -y latex-cjk-all texlive-lang-chinese texlive-lang-english cp fonts/* /usr/share/fonts/zh-cn/ cd /usr/share/fonts fc-cache -fv # 更新字体缓存 fc-list :lang=zh-cn fc-match Arial 最后在shell目录里面运行：\nvim /usr/local/texlive/2023/texmf.cnf 进入配置文件，在最底下加入一句 shell_escape = t\n我也不知道这有什么用，属于是前辈传承了🤔 注意，如果Texlive(扩展包的官名)版本不同的话，目录地址也会有所变化，因此需要根据实际的地址来填写，例如将2023改成2024。\n在Linux命令行中可以用 ls -l 来查看当前目录下所有的文件 部署成功 # 现在你就可以愉快地使用本地版OverLeaf了，没有编译超时的困扰~\n如果非常巧合，你也是个CQUer，这里附赠一份重庆大学的毕业论文模板，炒鸡的亲民哦：CQUThesis\n","date":"2024-07-12","externalUrl":null,"permalink":"/blog/localoverleaf/","section":"Blogs","summary":"\u003ch2 class=\"relative group\"\u003e背景提要 \n    \u003cdiv id=\"%E8%83%8C%E6%99%AF%E6%8F%90%E8%A6%81\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E8%83%8C%E6%99%AF%E6%8F%90%E8%A6%81\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e你应该知道如何通过命令行与电脑交互，包括但不限于：Windows如何唤出命令行/终端，正在运行中的命令什么时候结束\u0026hellip;\u0026hellip;\u003c/p\u003e","title":"本地 OverLeaf 部署","type":"blog"},{"content":" 引用文献 # 我对于贝叶斯优化的理解也并不多，主要参考下面的内容👇\n【机器学习】一文看懂贝叶斯优化/Bayesian Optimization\n一文详解贝叶斯优化（Bayesian Optimization）原理\n贝叶斯优化(BayesianOptimization)\n超参数优\u0026mdash;贝叶斯优化及其改进（PBT优化）\n贝叶斯优化 (Bayesian Optimization)\nMATLAB官方文档\n优点和算法原理 # 这里重点描述贝叶斯优化的优点以及其算法原理。如果你只关注“怎么用”，可以先了解贝叶斯优化的优点，然后跳转到#MATLAB用法\n优点 # 算法原理 # MATLAB用法 # 代码一览 # % 定义目标函数 function y = objectiveFcn(x) y = (1 - x.x1)^2 + 100 * (x.x2 - x.x1^2)^2; end % 定义优化变量 vars = [optimizableVariable(\u0026#39;x1\u0026#39;, [-2, 2]) optimizableVariable(\u0026#39;x2\u0026#39;, [-2, 2])]; % 执行贝叶斯优化 results = bayesopt(@objectiveFcn, vars, ... \u0026#39;AcquisitionFunctionName\u0026#39;, \u0026#39;expected-improvement-plus\u0026#39;, ... \u0026#39;MaxObjectiveEvaluations\u0026#39;, 30, ... \u0026#39;IsObjectiveDeterministic\u0026#39;, true, ... \u0026#39;Verbose\u0026#39;, 1); % 查看结果 bestPoint = results.XAtMinObjective; bestObjective = results.MinObjective; fprintf(\u0026#39;最优解 x1: %.4f, x2: %.4f\\n\u0026#39;, bestPoint.x1, bestPoint.x2); fprintf(\u0026#39;最优目标值: %.4f\\n\u0026#39;, bestObjective); 参数说明 # Params Meaning AcquisitionFunctionName 选择采集函数，这决定了算法在每次采样之后如何选取下一个采样点 MaxObjectiveEvaluations 最大迭代轮次 IsObjectiveDeterministic 如果目标函数是确定的，不包含噪声，则设置为 true ；否则设置为 false Verbose 决定了结果输出的详细程度，所有的输出可能包含多张图表 每个参数具体的可选值见官方文档: bayesopt；官方写的相当细致，还有很多样例。\n数学建模人必会技能之一就是读文档😝 ","date":"2024-08-05","externalUrl":null,"permalink":"/blog/bayesianopt/","section":"Blogs","summary":"\u003ch2 class=\"relative group\"\u003e引用文献 \n    \u003cdiv id=\"%E5%BC%95%E7%94%A8%E6%96%87%E7%8C%AE\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%BC%95%E7%94%A8%E6%96%87%E7%8C%AE\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e我对于贝叶斯优化的理解也并不多，主要参考下面的内容👇\u003c/p\u003e","title":"贝叶斯优化","type":"blog"},{"content":" 创建虚拟环境 # 创建 # 一些常规的代码例子如下👇\n# 创建虚拟环境 python -m venv your_env_name # 指定python版本创建虚拟环境，如果你的python是默认安装路径 python -m venv your_env_name --python=python3.11 # python是自定义的安装路径 D:\\Python\\Python311\\python.exe -m venv your_env_name 下面有一些可选参数用于创建自定义的虚拟环境：\n参数名 含义 --system-site-packages 创建的虚拟环境将包含全局Python环境中的包，这可以避免重复安装一些常用的包 --clear 如果指定的虚拟环境目录已经存在，这会清除目录中的所有内容，然后重新创建虚拟环境 --version 用于确认虚拟环境中 Python 的版本 所有的参数说明都可以通过运行 python -m venv -h 来获得；不用到处查文档了~😆 激活 # 默认情况下，虚拟环境处于非激活状态。在“your_env_name/Scripts/”目录下将有一个名为“activate”的文件，用命令行运行即可。\n# 激活虚拟环境 your_env_name/Scripts/activate ","date":"2024-08-10","externalUrl":null,"permalink":"/blog/pythontips/","section":"Blogs","summary":"\u003ch2 class=\"relative group\"\u003e创建虚拟环境 \n    \u003cdiv id=\"%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e创建 \n    \u003cdiv id=\"%E5%88%9B%E5%BB%BA\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%88%9B%E5%BB%BA\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e一些常规的代码例子如下👇\u003c/p\u003e","title":"Python小技巧","type":"blog"},{"content":" 前言 # 这篇文章主要是对于 CUMCM 2024 的比赛全过程进行一个梳理和总结。\n我们的队伍是在 2023 年的冬天组起来的，CUMCM 2024 也是我们第一次参与“数学建模”比赛。经过了大大小小的模拟赛，最终进入了全国的比赛。在提交最终论文之后获得省级一等奖并推荐国家级一等奖，最终获得国家级二等奖。\n整个过程有振奋惊喜，也有失落遗憾；我们在比赛中应该是做对了一部分事情，因此我们初次参赛就获得了国家级奖项；但不足肯定是有的，毕竟从“推荐国家级一等奖”变成“国家级二等奖”总是有理由的。\n总之，这次经历着实是令人难忘，更加值得梳理和总结经验，为明年的比赛作准备。\nCUMCM 全称为 Chinese Undergraduate Mathmatical Contest in Modeling；民间称呼为“数模国赛” 客观情况 # 优点 # 不足 # 改进方案 # ","date":"2024-09-12","externalUrl":null,"permalink":"/blog/cumcm2024/","section":"Blogs","summary":"\u003ch2 class=\"relative group\"\u003e前言 \n    \u003cdiv id=\"%E5%89%8D%E8%A8%80\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e这篇文章主要是对于 CUMCM 2024 的比赛全过程进行一个梳理和总结。\u003c/p\u003e","title":"CUMCM 2024总结","type":"blog"},{"content":"","date":"2024-09-12","externalUrl":null,"permalink":"/blog/","section":"Blogs","summary":"","title":"Blogs","type":"blog"},{"content":"","date":"2024-09-12","externalUrl":null,"permalink":"/tags/cumcm/","section":"标签","summary":"","title":"CUMCM","type":"tags"},{"content":"","date":"2024-09-12","externalUrl":null,"permalink":"/tags/math/","section":"标签","summary":"","title":"Math","type":"tags"},{"content":"","date":"12 September 2024","externalUrl":null,"permalink":"/en/series/mathmodel/","section":"Seires","summary":"","title":"MathModel","type":"series"},{"content":"假装这里有一份 Morethan 的简介。\n","date":"2024-09-12","externalUrl":null,"permalink":"/authors/morethan/","section":"作者列表","summary":"\u003cp\u003e假装这里有一份 Morethan 的简介。\u003c/p\u003e","title":"Morethan","type":"authors"},{"content":" ","date":"2024-09-12","externalUrl":null,"permalink":"/tags/","section":"标签","summary":"\u003chr\u003e","title":"标签","type":"tags"},{"content":" ","date":"2024-09-12","externalUrl":null,"permalink":"/","section":"欢迎来到Morethan的小站","summary":"\u003c!-- \u003cdiv class=\"flex px-4 py-2 mb-8 text-base rounded-md bg-primary-100 dark:bg-primary-900\"\u003e\n  \u003cspan class=\"flex items-center ltr:pr-3 rtl:pl-3 text-primary-400\"\u003e\n    \n    \n      \u003cspan class=\"relative inline-block align-text-bottom icon\"\u003e\n        \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n    \n      \u003c/span\u003e\n    \n\n  \u003c/span\u003e\n  \u003cspan class=\"flex items-center justify-between grow dark:text-neutral-300\"\u003e\n    \u003cspan class=\"prose dark:prose-invert\"\u003e 这是 \u003ccode id=\"layout\"\u003ebackground\u003c/code\u003e 的样式示例。\u003c/span\u003e\n    \u003cbutton\n      id=\"switch-layout-button\"\n      class=\"px-4 !text-neutral !no-underline rounded-md bg-primary-600 hover:!bg-primary-500 dark:bg-primary-800 dark:hover:!bg-primary-700\"\n    \u003e\n      切换 layout \u0026orarr;\n    \u003c/button\u003e\n  \u003c/span\u003e\n\u003c/div\u003e --\u003e","title":"欢迎来到Morethan的小站","type":"page"},{"content":"","date":"2024-09-12","externalUrl":null,"permalink":"/series/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/","section":"系列","summary":"","title":"数学建模","type":"series"},{"content":" ","date":"2024-09-12","externalUrl":null,"permalink":"/series/","section":"系列","summary":"\u003chr\u003e","title":"系列","type":"series"},{"content":"","date":"2024-09-12","externalUrl":null,"permalink":"/authors/","section":"作者列表","summary":"","title":"作者列表","type":"authors"},{"content":"","date":"10 August 2024","externalUrl":null,"permalink":"/en/series/operation/","section":"Seires","summary":"","title":"Operation","type":"series"},{"content":"","date":"2024-08-10","externalUrl":null,"permalink":"/tags/python/","section":"标签","summary":"","title":"Python","type":"tags"},{"content":"","date":"2024-08-10","externalUrl":null,"permalink":"/series/%E6%8A%80%E6%9C%AF%E6%B5%81%E7%A8%8B/","section":"系列","summary":"","title":"技术流程","type":"series"},{"content":"","date":"2024-08-05","externalUrl":null,"permalink":"/tags/matlab/","section":"标签","summary":"","title":"MATLAB","type":"tags"},{"content":"","date":"2024-07-12","externalUrl":null,"permalink":"/tags/latex/","section":"标签","summary":"","title":"LaTeX","type":"tags"},{"content":"","date":"2024-07-12","externalUrl":null,"permalink":"/tags/overleaf/","section":"标签","summary":"","title":"Overleaf","type":"tags"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"这是高级标记。类似其他 Blowfish 中的其他列表页面，你可以在分类列表页添加自定义内容，这部分内容会显示在顶部。\u0026#x1f680;\n你也可以用这些内容来定义 Hugo 的元数据，比如标题和描述。这些内容可以被用来增强 SEO 或其他目的。\n","externalUrl":null,"permalink":"/tags/advanced/","section":"标签","summary":"\u003cp\u003e这是高级标记。类似其他 Blowfish 中的其他列表页面，你可以在分类列表页添加自定义内容，这部分内容会显示在顶部。\u0026#x1f680;\u003c/p\u003e","title":"高级","type":"tags"}]